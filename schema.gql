# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UsersInfoModel {
  id: Int!
  user: UserModel!
  name: String!
  lastname: String!
  position: String
  hiringDate: DateTime
  badge: Int
  costCenter: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DepartmentModel {
  id: Int!
  key: String!
  name: String
  createdAt: DateTime!
  updatedAt: DateTime!
  users: [UserModel!]
}

type UserModel {
  id: Int!
  info: UsersInfoModel!
  manager: UserModel
  department: DepartmentModel
  username: String!
  email: String!
  role: String!
  resetPasswordToken: String
  confirmationToken: String
  confirmed: Boolean!
  blocked: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type JWT {
  jwt: String!
}

type Query {
  user(id: Int!, locale: String = "br"): UserModel!
  users(locale: String = "br"): [UserModel!]!
  usersInfo(id: Int!): UsersInfoModel!
  department(id: Int!, locale: String = "br"): DepartmentModel!
  departments(locale: String = "br", relations: [String!] = []): [DepartmentModel!]!
}

type Mutation {
  signin(input: SignInInput!): JWT!
  createUser(input: CreateUserInput!): UserModel!
  updateUser(id: Int!, input: UpdateUserInput!): UserModel!
  removeUser(id: Int!): UserModel!
  createUsersInfo(id: Float!, createUsersInfoInput: CreateUsersInfoInput!): UsersInfoModel!
  updateUsersInfo(id: Float!, updateUsersInfoInput: UpdateUsersInfoInput!): UsersInfoModel!
  removeUsersInfo(id: Int!): UsersInfoModel!
  createDepartment(input: CreateDepartmentInput!): DepartmentModel!
  updateDepartment(id: Int!, input: UpdateDepartmentInput!): DepartmentModel!
}

input SignInInput {
  identifier: String!
  password: String!
}

input CreateUserInput {
  username: String!
  email: String!
  role: String = "User"
}

input UpdateUserInput {
  manager: Int
  department: Int
  role: String
  confirmed: Boolean
  blocked: Boolean
  deleted: Boolean
}

input CreateUsersInfoInput {
  position: String
  hiringDate: DateTime
  badge: Int
  costCenter: Int
  name: String!
  lastname: String!
}

input UpdateUsersInfoInput {
  position: String
  hiringDate: DateTime
  badge: Int
  costCenter: Int
}

input CreateDepartmentInput {
  key: String!
  name: String!
}

input UpdateDepartmentInput {
  name: String!
  locale: String!
}